(define (cube x) (* x x x))
(define (sum term a next b)
    (if (> a b)
        0
        (+ (term a)
           (sum term (next a) next b))))
(define (integral f a b dx)
    (define (add-dx x) (+ x dx))
    (* (sum f (+ a (/ dx 2.0)) add-dx b) 
       dx))

(display "(integral cube 0 1 0.01): ")
(display (integral cube 0 1 0.01))
(newline)
(display "(integral cube 0 1 0.001): ")
(display (integral cube 0 1 0.001))
(newline)

(define (simpson f a b n)
    (define h (/ (- b a ) n))
    (define (two-step x) (+ x h h))
    (* h (/ 1 3.0)
       (+ (f a)
          (f b)
          (* 4 (sum f (+ a h) two-step b))
          (* 2 (sum f (+ a h h) two-step (- b h))) ; important to change the 'b' boundary,
          ; otherwise the hops will reach b and add 2*f(b) to the sum
          )))

(display "(simpson cube 0 1 100): ")
(display (simpson cube 0 1 100))
(newline)
(display "(simpson cube 0 1 1000): ")
(display (simpson cube 0 1 1000))
(newline)
