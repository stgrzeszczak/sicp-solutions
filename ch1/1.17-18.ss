(define (double d) (+ d d))
(define (halve n) (/ n 2))
(define (rmul a b)
    (cond ((= b 1) a)
      ((even? b) (rmul (double a) (halve b)))
      (else (+ a (rmul a (- b 1))))
      )
    )
(display "(rmul 4 5):")
(display (rmul 4 5))
(newline)
(display "(rmul 4 7):")
(display (rmul 4 7))
(newline)
(display "(rmul 4 9):")
(display (rmul 4 9))
(newline)
(define (imul a b)
    (define (imuli a b accu)
      (cond ((= b 1) (+ a accu))
        ((even? b) (imuli (double a) (halve b) accu))
        (else (imuli a (- b 1) (+ a accu)))
        )
      )
    (imuli a b 0))
(display "(imul 4 5):")
(display (imul 4 5))
(newline)
(display "(imul 4 7):")
(display (imul 4 7))
(newline)
(display "(imul 4 9):")
(display (imul 4 9))
(newline)
